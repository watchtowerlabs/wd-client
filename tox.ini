[tox]
env_list = flake8,isort,yapf,pylint,build,docs,robot-lint,robot

[testenv:flake8]
deps =
    -cconstraints.txt
    flake8
    flake8-quotes
constrain_package_deps = true
skip_install = True
commands = {env_bin_dir}/flake8
system_site_packages = true

[testenv:isort]
deps =
    -cconstraints.txt
    isort
constrain_package_deps = true
commands = {env_bin_dir}/isort -c --df .
system_site_packages = true

[testenv:isort-apply]
deps =
    -cconstraints.txt
    isort
constrain_package_deps = true
commands = {env_bin_dir}/isort .
system_site_packages = true

[testenv:yapf]
deps =
    -cconstraints.txt
    yapf
constrain_package_deps = true
skip_install = True
commands = {env_bin_dir}/yapf -d -r .
system_site_packages = true

[testenv:yapf-apply]
deps =
    -cconstraints.txt
    yapf
constrain_package_deps = true
skip_install = True
commands = {env_bin_dir}/yapf -i -r .
system_site_packages = true

[testenv:pylint]
deps =
    -cconstraints.txt
    pylint
constrain_package_deps = true
commands = {env_bin_dir}/pylint \
    {env_site_packages_dir}/satnogsclient
system_site_packages = true

[testenv:build]
deps =
    -cconstraints.txt
    build
constrain_package_deps = true
skip_install = True
commands =
    python -m build
system_site_packages = true

[testenv:upload]
set_env =
    TWINE_USERNAME={env:PYPI_USERNAME}
    TWINE_PASSWORD={env:PYPI_PASSWORD}
deps =
    -cconstraints.txt
    build
    twine
constrain_package_deps = true
skip_install = True
commands =
    python -m build
    {env_bin_dir}/twine upload dist/*
system_site_packages = true

[testenv:docs]
deps =
    -cconstraints.txt
    -rdocs/requirements.txt
constrain_package_deps = true
changedir = {tox_root}/docs
commands =
    {env_bin_dir}/sphinx-build -W -b html . "_build/html"
system_site_packages = true

[testenv:deps]
recreate = True
deps =
    -rrequirements-dev.txt
constrain_package_deps = true
commands = pip check
system_site_packages = true

[testenv:robot-lint]
deps =
    -cconstraints.txt
    robotframework
    robotframework-httpctrl
    robotframework-tidy
constrain_package_deps = true
skip_install = True
changedir = {tox_root}/robot
commands = robotidy --check --diff --no-overwrite testsuites

[testenv:robot-tidy]
deps =
    -cconstraints.txt
    robotframework
    robotframework-httpctrl
    robotframework-tidy
constrain_package_deps = true
skip_install = True
changedir = {tox_root}/robot
commands = robotidy --overwrite testsuites

[testenv:robot]
deps =
    -cconstraints.txt
    robotframework
    robotframework-httpctrl
    robotframework-tidy
constrain_package_deps = true
changedir = {tox_root}/robot
commands = python -m robot -d output testsuites
system_site_packages = true

[testenv:pytest]
deps =
    -cconstraints.txt
    pytest
    pytest-xdist
    pytest-forked
constrain_package_deps = true
commands = {env_bin_dir}/pytest -n auto --forked
system_site_packages = true
