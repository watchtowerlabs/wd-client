stages:
  - static
  - build
  - test
  - deploy
static:
  stage: static
  image: python:2
  before_script:
    - pip install tox~=3.8.0
  script:
    - tox -e py2-flake8,yapf,py2-pylint,robot-lint
static3:
  stage: static
  image: python:3
  before_script:
    - pip install tox~=3.8.0
  script:
    - tox -e "py3-{flake8,pylint}"
build:
  stage: build
  image: python:2
  before_script:
    - pip install tox~=3.8.0
  script:
    - rm -rf dist
    - tox -e py2-build
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - dist
build3:
  stage: build
  image: python:3
  before_script:
    - pip install tox~=3.8.0
  script:
    - rm -rf dist
    - tox -e py3-build
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - dist
test:
  stage: test
  image: python:2
  before_script:
    - pip install tox~=3.8.0
  script:
    - rm -rf robot/output
    - tox -e py2-robot
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - robot/output
test3:
  stage: test
  image: python:3
  before_script:
    - pip install tox~=3.8.0
  script:
    - rm -rf robot/output
    - tox -e py3-robot
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - robot/output
deploy:
  stage: deploy
  image: python:2
  before_script:
    - pip install twine~=1.13.0
  script:
    - rm -rf dist
    - python setup.py sdist bdist_wheel
    - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  only:
    refs:
      - tags
    variables:
      - $PYPI_USERNAME
      - $PYPI_PASSWORD
